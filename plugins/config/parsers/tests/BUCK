#  Copyright (c) 2014-present, Facebook, Inc.
#  All rights reserved.
#
#  This source code is licensed as defined on the LICENSE file found in the
#  root directory of this source tree.

load("//tools/build_defs/oss/osquery:cxx.bzl", "osquery_cxx_test")
load("//tools/build_defs/oss/osquery:native.bzl", "osquery_target")

osquery_cxx_test(
    name = "decorators_tests",
    srcs = [
        "decorators_tests.cpp",
    ],
    env = {
        "TEST_CONF_FILES_DIR": "$(location {})".format(
            osquery_target("tools/tests/configs:conf_files"),
        ),
    },
    visibility = ["PUBLIC"],
    deps = [
        osquery_target("osquery/config/tests:test_utils"),
        osquery_target("osquery/core:core"),
        osquery_target("osquery/database:database"),
        osquery_target("osquery/dispatcher:dispatcher"),
        osquery_target("osquery/events:events"),
        osquery_target("osquery/extensions:extensions"),
        osquery_target("osquery/extensions:impl_thrift"),
        osquery_target("osquery/filesystem:osquery_filesystem"),
        osquery_target("osquery/registry:registry"),
        osquery_target("osquery/remote/enroll:tls_enroll"),
        osquery_target("osquery/utils/json:json"),
        osquery_target("plugins/config:tls_config"),
        osquery_target("plugins/config/parsers:parsers"),
        osquery_target("plugins/database:ephemeral"),
        osquery_target("specs:tables"),
    ],
)

osquery_cxx_test(
    name = "events_parser_tests",
    srcs = [
        "events_parser_tests.cpp",
    ],
    env = {
        "TEST_CONF_FILES_DIR": "$(location {})".format(
            osquery_target("tools/tests/configs:conf_files"),
        ),
    },
    visibility = ["PUBLIC"],
    deps = [
        osquery_target("osquery/config/tests:test_utils"),
        osquery_target("osquery/core:core"),
        osquery_target("osquery/database:database"),
        osquery_target("osquery/dispatcher:dispatcher"),
        osquery_target("osquery/events:events"),
        osquery_target("osquery/extensions:extensions"),
        osquery_target("osquery/extensions:impl_thrift"),
        osquery_target("osquery/filesystem:osquery_filesystem"),
        osquery_target("osquery/registry:registry"),
        osquery_target("osquery/remote/enroll:tls_enroll"),
        osquery_target("osquery/utils/json:json"),
        osquery_target("plugins/config:tls_config"),
        osquery_target("plugins/config/parsers:parsers"),
        osquery_target("plugins/database:ephemeral"),
        osquery_target("specs:tables"),
    ],
)

osquery_cxx_test(
    name = "file_paths_tests",
    srcs = [
        "file_paths_tests.cpp",
    ],
    env = {
        "TEST_CONF_FILES_DIR": "$(location {})".format(
            osquery_target("tools/tests/configs:conf_files"),
        ),
    },
    visibility = ["PUBLIC"],
    deps = [
        osquery_target("osquery/config/tests:test_utils"),
        osquery_target("osquery/core:core"),
        osquery_target("osquery/database:database"),
        osquery_target("osquery/dispatcher:dispatcher"),
        osquery_target("osquery/events:events"),
        osquery_target("osquery/extensions:extensions"),
        osquery_target("osquery/extensions:impl_thrift"),
        osquery_target("osquery/filesystem:osquery_filesystem"),
        osquery_target("osquery/registry:registry"),
        osquery_target("osquery/remote/enroll:tls_enroll"),
        osquery_target("osquery/utils/conversions:conversions"),
        osquery_target("osquery/utils/json:json"),
        osquery_target("plugins/config:tls_config"),
        osquery_target("plugins/config/parsers:parsers"),
        osquery_target("plugins/database:ephemeral"),
        osquery_target("specs:tables"),
    ],
)

osquery_cxx_test(
    name = "options_tests",
    srcs = [
        "options_tests.cpp",
    ],
    env = {
        "TEST_CONF_FILES_DIR": "$(location {})".format(
            osquery_target("tools/tests/configs:conf_files"),
        ),
    },
    visibility = ["PUBLIC"],
    deps = [
        osquery_target("osquery/config/tests:test_utils"),
        osquery_target("osquery/core:core"),
        osquery_target("osquery/database:database"),
        osquery_target("osquery/dispatcher:dispatcher"),
        osquery_target("osquery/events:events"),
        osquery_target("osquery/extensions:extensions"),
        osquery_target("osquery/extensions:impl_thrift"),
        osquery_target("osquery/filesystem:osquery_filesystem"),
        osquery_target("osquery/registry:registry"),
        osquery_target("osquery/remote/enroll:tls_enroll"),
        osquery_target("osquery/utils/conversions:conversions"),
        osquery_target("osquery/utils/json:json"),
        osquery_target("plugins/config:tls_config"),
        osquery_target("plugins/config/parsers:parsers"),
        osquery_target("plugins/database:ephemeral"),
        osquery_target("specs:tables"),
    ],
)

osquery_cxx_test(
    name = "views_tests",
    srcs = [
        "views_tests.cpp",
    ],
    env = {
        "TEST_CONF_FILES_DIR": "$(location {})".format(
            osquery_target("tools/tests/configs:conf_files"),
        ),
    },
    visibility = ["PUBLIC"],
    deps = [
        osquery_target("osquery/config/tests:test_utils"),
        osquery_target("osquery/core:core"),
        osquery_target("osquery/database:database"),
        osquery_target("osquery/dispatcher:dispatcher"),
        osquery_target("osquery/events:events"),
        osquery_target("osquery/extensions:extensions"),
        osquery_target("osquery/extensions:impl_thrift"),
        osquery_target("osquery/filesystem:osquery_filesystem"),
        osquery_target("osquery/registry:registry"),
        osquery_target("osquery/remote/enroll:tls_enroll"),
        osquery_target("osquery/utils/conversions:conversions"),
        osquery_target("osquery/utils/json:json"),
        osquery_target("plugins/config:tls_config"),
        osquery_target("plugins/config/parsers:parsers"),
        osquery_target("plugins/database:ephemeral"),
        osquery_target("specs:tables"),
    ],
)
